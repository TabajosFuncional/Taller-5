[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\santy\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\santy\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.3 (Oracle Corporation Java 19)
[debug]       Load.loadUnit: plugins took 113.4498ms
[debug]       Load.loadUnit: defsScala took 0.2204ms
[debug] [Loading] Scanning directory C:\Users\santy\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\santy\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.263 ms
[debug]           Load.resolveProject(global-plugins) took 34.2112ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\santy\.sbt\1.0\plugins, plugins: List(<none>))) took 64.3999ms
[debug] [Loading] Done in C:\Users\santy\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 88.1868ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1962ms
[debug]     Load.loadUnit(file:/C:/Users/santy/.sbt/1.0/plugins/, ...) took 211.0661ms
[debug]   Load.apply: load took 411.4557ms
[debug]   Load.apply: resolveProjects took 4.1771ms
[debug]   Load.apply: finalTransforms took 39.6751ms
[debug]   Load.apply: config.delegates took 6.3195ms
[debug]   Load.apply: Def.make(settings)... took 299.531ms
[debug]   Load.apply: structureIndex took 84.1325ms
[debug]   Load.apply: mkStreams took 1.8402ms
[info] loading global plugins from C:\Users\santy\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Canceling execution...
[debug] Load.defaultLoad until apply took 1818.4108ms
[debug]           Load.loadUnit: plugins took 28.5019ms
[debug]           Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Univalle\4to semestre\Funcional\Talleres\Concurrente\Taller 5\Taller 5\project
[debug]             Load.loadUnit: mkEval took 4.5519ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Univalle\4to semestre\Funcional\Talleres\Concurrente\Taller 5\Taller 5\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7052 ms
[info] loading settings for project taller-5-build from idea.sbt ...
[debug]               Load.resolveProject(taller-5-build) took 10.5796ms
[debug]             Load.loadTransitive: finalizeProject(Project(id taller-5-build, base: C:\Univalle\4to semestre\Funcional\Talleres\Concurrente\Taller 5\Taller 5\project, plugins: List(<none>))) took 12.818ms
[debug] [Loading] Done in C:\Univalle\4to semestre\Funcional\Talleres\Concurrente\Taller 5\Taller 5\project, returning: (taller-5-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 130.2746ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.9701ms
[debug]         Load.loadUnit(file:/C:/Univalle/4to%20semestre/Funcional/Talleres/Concurrente/Taller%205/Taller%205/project/, ...) took 166.7861ms
[debug]       Load.apply: load took 168.3516ms
[debug]       Load.apply: resolveProjects took 0.1643ms
[debug]       Load.apply: finalTransforms took 7.594ms
[debug]       Load.apply: config.delegates took 0.3921ms
[debug]       Load.apply: Def.make(settings)... took 53.6894ms
[debug]       Load.apply: structureIndex took 28.1378ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Univalle\4to semestre\Funcional\Talleres\Concurrente\Taller 5\Taller 5\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 1116.822ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Univalle\4to semestre\Funcional\Talleres\Concurrente\Taller 5\Taller 5
[debug]       Load.loadUnit: mkEval took 0.2815ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.76 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 21.791ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Univalle\4to semestre\Funcional\Talleres\Concurrente\Taller 5\Taller 5, plugins: List(<none>))) took 26.3165ms
[debug] [Loading] Done in C:\Univalle\4to semestre\Funcional\Talleres\Concurrente\Taller 5\Taller 5, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2388.3825ms
[debug]     Load.loadUnit: cleanEvalClasses took 35.2328ms
[debug]   Load.loadUnit(file:/C:/Univalle/4to%20semestre/Funcional/Talleres/Concurrente/Taller%205/Taller%205/, ...) took 3541.3985ms
[debug] Load.apply: load took 3543.015ms
[debug] Load.apply: resolveProjects took 0.0776ms
[debug] Load.apply: finalTransforms took 15.6194ms
[debug] Load.apply: config.delegates took 0.249ms
[debug] Load.apply: Def.make(settings)... took 44.9257ms
[debug] Load.apply: structureIndex took 17.5273ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to Taller 5 (in build file:/C:/Univalle/4to%20semestre/Funcional/Talleres/Concurrente/Taller%205/Taller%205/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51093 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51093, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Taller 5 (in build file:/C:/Univalle/4to%20semestre/Funcional/Talleres/Concurrente/Taller%205/Taller%205/)
[debug] > Exec(idea-shell, None, None)
